"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _default;

var _immutabilityHelper = _interopRequireDefault(require("immutability-helper"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var REGISTER_TRAVERSAL = "REGISTER_TRAVERSAL";
var RUN_TRAVERSAL = "RUN_TRAVERSAL";
var TRAVERSAL_FAILED = "TRAVERSAL_FAILED";
var TRAVERSAL_UNNECCESSARY = "TRAVERSAL_UNNECCESSARY";
var FETCH_GRAPH_DOCUMENT = "FETCH_GRAPH_DOCUMENT";
var INIT_STATE = {
  running: 0,
  pool: {},
  graphDocs: []
};

function _default() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;
  var action = arguments.length > 1 ? arguments[1] : undefined;
  var payload = action.payload;

  switch (action.type) {
    case REGISTER_TRAVERSAL:
      if (!state.graphDocs.includes(payload.docUri)) {
        return (0, _immutabilityHelper["default"])(state, {
          pool: {
            $merge: _defineProperty({}, payload.docUri, payload.params)
          }
        });
      } else {//console.log("REGISTER_TRAVERSAL: Alreaady seen this resource, ignoring: ", payload.docUri);
      }

    case RUN_TRAVERSAL:
      if (payload.docUri in state.pool) {
        return (0, _immutabilityHelper["default"])(state, {
          pool: {
            $unset: [payload.docUri]
          },
          running: {
            $set: state.running + 1
          },
          graphDocs: {
            $push: [payload.docUri]
          }
        });
      } else {
        //console.log("WARNING: Traversal on document not included in traversal pool!", payload.docUri);
        return state;
      }

      break;

    case TRAVERSAL_FAILED:
    case TRAVERSAL_UNNECCESSARY:
    case FETCH_GRAPH_DOCUMENT:
      // new graph fragment has arrived, i.e. a traversal hop has completed
      return (0, _immutabilityHelper["default"])(state, {
        running: {
          $set: state.running - 1
        }
      });

    default:
      return state;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9yZWR1Y2Vycy9yZWR1Y2VyX3RyYXZlcnNhbFBvb2wuanMiXSwibmFtZXMiOlsiUkVHSVNURVJfVFJBVkVSU0FMIiwiUlVOX1RSQVZFUlNBTCIsIlRSQVZFUlNBTF9GQUlMRUQiLCJUUkFWRVJTQUxfVU5ORUNDRVNTQVJZIiwiRkVUQ0hfR1JBUEhfRE9DVU1FTlQiLCJJTklUX1NUQVRFIiwicnVubmluZyIsInBvb2wiLCJncmFwaERvY3MiLCJzdGF0ZSIsImFjdGlvbiIsInBheWxvYWQiLCJ0eXBlIiwiaW5jbHVkZXMiLCJkb2NVcmkiLCIkbWVyZ2UiLCJwYXJhbXMiLCIkdW5zZXQiLCIkc2V0IiwiJHB1c2giXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7O0FBQ0EsSUFBTUEsa0JBQWtCLEdBQUcsb0JBQTNCO0FBQ0EsSUFBTUMsYUFBYSxHQUFHLGVBQXRCO0FBQ0EsSUFBTUMsZ0JBQWdCLEdBQUcsa0JBQXpCO0FBQ0EsSUFBTUMsc0JBQXNCLEdBQUcsd0JBQS9CO0FBQ0EsSUFBTUMsb0JBQW9CLEdBQUcsc0JBQTdCO0FBQ0EsSUFBTUMsVUFBVSxHQUFHO0FBQ2pCQyxFQUFBQSxPQUFPLEVBQUUsQ0FEUTtBQUVqQkMsRUFBQUEsSUFBSSxFQUFFLEVBRlc7QUFHakJDLEVBQUFBLFNBQVMsRUFBRTtBQUhNLENBQW5COztBQUtlLG9CQUFzQztBQUFBLE1BQTVCQyxLQUE0Qix1RUFBcEJKLFVBQW9CO0FBQUEsTUFBUkssTUFBUTtBQUNuRCxNQUFNQyxPQUFPLEdBQUdELE1BQU0sQ0FBQ0MsT0FBdkI7O0FBRUEsVUFBUUQsTUFBTSxDQUFDRSxJQUFmO0FBQ0UsU0FBS1osa0JBQUw7QUFDRSxVQUFHLENBQUVTLEtBQUssQ0FBQ0QsU0FBTixDQUFnQkssUUFBaEIsQ0FBeUJGLE9BQU8sQ0FBQ0csTUFBakMsQ0FBTCxFQUErQztBQUM3QyxlQUFPLG9DQUFPTCxLQUFQLEVBQWM7QUFDbkJGLFVBQUFBLElBQUksRUFBRTtBQUNKUSxZQUFBQSxNQUFNLHNCQUNISixPQUFPLENBQUNHLE1BREwsRUFDY0gsT0FBTyxDQUFDSyxNQUR0QjtBQURGO0FBRGEsU0FBZCxDQUFQO0FBT0QsT0FSRCxNQVFPLENBQ0w7QUFDRDs7QUFFSCxTQUFLZixhQUFMO0FBQ0UsVUFBSVUsT0FBTyxDQUFDRyxNQUFSLElBQWtCTCxLQUFLLENBQUNGLElBQTVCLEVBQWtDO0FBQ2hDLGVBQU8sb0NBQU9FLEtBQVAsRUFBYztBQUNuQkYsVUFBQUEsSUFBSSxFQUFFO0FBQ0pVLFlBQUFBLE1BQU0sRUFBRSxDQUFDTixPQUFPLENBQUNHLE1BQVQ7QUFESixXQURhO0FBSW5CUixVQUFBQSxPQUFPLEVBQUU7QUFDUFksWUFBQUEsSUFBSSxFQUFFVCxLQUFLLENBQUNILE9BQU4sR0FBZ0I7QUFEZixXQUpVO0FBT25CRSxVQUFBQSxTQUFTLEVBQUU7QUFDVFcsWUFBQUEsS0FBSyxFQUFFLENBQUNSLE9BQU8sQ0FBQ0csTUFBVDtBQURFO0FBUFEsU0FBZCxDQUFQO0FBV0QsT0FaRCxNQVlPO0FBQ0w7QUFDQSxlQUFPTCxLQUFQO0FBQ0Q7O0FBRUQ7O0FBRUYsU0FBS1AsZ0JBQUw7QUFDQSxTQUFLQyxzQkFBTDtBQUNBLFNBQUtDLG9CQUFMO0FBQ0U7QUFDQSxhQUFPLG9DQUFPSyxLQUFQLEVBQWM7QUFDbkJILFFBQUFBLE9BQU8sRUFBRTtBQUNQWSxVQUFBQSxJQUFJLEVBQUVULEtBQUssQ0FBQ0gsT0FBTixHQUFnQjtBQURmO0FBRFUsT0FBZCxDQUFQOztBQU1GO0FBQ0UsYUFBT0csS0FBUDtBQTdDSjtBQStDRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB1cGRhdGUgZnJvbSAnaW1tdXRhYmlsaXR5LWhlbHBlcic7XG5jb25zdCBSRUdJU1RFUl9UUkFWRVJTQUwgPSBcIlJFR0lTVEVSX1RSQVZFUlNBTFwiO1xuY29uc3QgUlVOX1RSQVZFUlNBTCA9IFwiUlVOX1RSQVZFUlNBTFwiO1xuY29uc3QgVFJBVkVSU0FMX0ZBSUxFRCA9IFwiVFJBVkVSU0FMX0ZBSUxFRFwiO1xuY29uc3QgVFJBVkVSU0FMX1VOTkVDQ0VTU0FSWSA9IFwiVFJBVkVSU0FMX1VOTkVDQ0VTU0FSWVwiO1xuY29uc3QgRkVUQ0hfR1JBUEhfRE9DVU1FTlQgPSBcIkZFVENIX0dSQVBIX0RPQ1VNRU5UXCI7XG5jb25zdCBJTklUX1NUQVRFID0ge1xuICBydW5uaW5nOiAwLFxuICBwb29sOiB7fSxcbiAgZ3JhcGhEb2NzOiBbXVxufTtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIChzdGF0ZSA9IElOSVRfU1RBVEUsIGFjdGlvbikge1xuICBjb25zdCBwYXlsb2FkID0gYWN0aW9uLnBheWxvYWQ7XG5cbiAgc3dpdGNoIChhY3Rpb24udHlwZSkge1xuICAgIGNhc2UgUkVHSVNURVJfVFJBVkVSU0FMOlxuICAgICAgaWYoISBzdGF0ZS5ncmFwaERvY3MuaW5jbHVkZXMocGF5bG9hZC5kb2NVcmkpKSB7IFxuICAgICAgICByZXR1cm4gdXBkYXRlKHN0YXRlLCB7XG4gICAgICAgICAgcG9vbDoge1xuICAgICAgICAgICAgJG1lcmdlOiB7XG4gICAgICAgICAgICAgIFtwYXlsb2FkLmRvY1VyaV06IHBheWxvYWQucGFyYW1zXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7IFxuICAgICAgICAvL2NvbnNvbGUubG9nKFwiUkVHSVNURVJfVFJBVkVSU0FMOiBBbHJlYWFkeSBzZWVuIHRoaXMgcmVzb3VyY2UsIGlnbm9yaW5nOiBcIiwgcGF5bG9hZC5kb2NVcmkpO1xuICAgICAgfVxuXG4gICAgY2FzZSBSVU5fVFJBVkVSU0FMOlxuICAgICAgaWYgKHBheWxvYWQuZG9jVXJpIGluIHN0YXRlLnBvb2wpIHtcbiAgICAgICAgcmV0dXJuIHVwZGF0ZShzdGF0ZSwge1xuICAgICAgICAgIHBvb2w6IHtcbiAgICAgICAgICAgICR1bnNldDogW3BheWxvYWQuZG9jVXJpXVxuICAgICAgICAgIH0sXG4gICAgICAgICAgcnVubmluZzoge1xuICAgICAgICAgICAgJHNldDogc3RhdGUucnVubmluZyArIDFcbiAgICAgICAgICB9LFxuICAgICAgICAgIGdyYXBoRG9jczogeyBcbiAgICAgICAgICAgICRwdXNoOiBbcGF5bG9hZC5kb2NVcmldXG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vY29uc29sZS5sb2coXCJXQVJOSU5HOiBUcmF2ZXJzYWwgb24gZG9jdW1lbnQgbm90IGluY2x1ZGVkIGluIHRyYXZlcnNhbCBwb29sIVwiLCBwYXlsb2FkLmRvY1VyaSk7XG4gICAgICAgIHJldHVybiBzdGF0ZTtcbiAgICAgIH1cblxuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlIFRSQVZFUlNBTF9GQUlMRUQ6XG4gICAgY2FzZSBUUkFWRVJTQUxfVU5ORUNDRVNTQVJZOlxuICAgIGNhc2UgRkVUQ0hfR1JBUEhfRE9DVU1FTlQ6XG4gICAgICAvLyBuZXcgZ3JhcGggZnJhZ21lbnQgaGFzIGFycml2ZWQsIGkuZS4gYSB0cmF2ZXJzYWwgaG9wIGhhcyBjb21wbGV0ZWRcbiAgICAgIHJldHVybiB1cGRhdGUoc3RhdGUsIHtcbiAgICAgICAgcnVubmluZzoge1xuICAgICAgICAgICRzZXQ6IHN0YXRlLnJ1bm5pbmcgLSAxXG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiBzdGF0ZTtcbiAgfVxufVxuIl19